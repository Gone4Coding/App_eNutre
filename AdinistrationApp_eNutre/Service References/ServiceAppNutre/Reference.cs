//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AdinistrationApp_eNutre.ServiceAppNutre {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/WebserviceAppNutre")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool AdminField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool Admin {
            get {
                return this.AdminField;
            }
            set {
                if ((this.AdminField.Equals(value) != true)) {
                    this.AdminField = value;
                    this.RaisePropertyChanged("Admin");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Activity", Namespace="http://schemas.datacontract.org/2004/07/WebserviceAppNutre")]
    [System.SerializableAttribute()]
    public partial class Activity : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaloriasUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaloriasValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MetField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MetNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NomeField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaloriasUnit {
            get {
                return this.CaloriasUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.CaloriasUnitField, value) != true)) {
                    this.CaloriasUnitField = value;
                    this.RaisePropertyChanged("CaloriasUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaloriasValue {
            get {
                return this.CaloriasValueField;
            }
            set {
                if ((this.CaloriasValueField.Equals(value) != true)) {
                    this.CaloriasValueField = value;
                    this.RaisePropertyChanged("CaloriasValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Met {
            get {
                return this.MetField;
            }
            set {
                if ((object.ReferenceEquals(this.MetField, value) != true)) {
                    this.MetField = value;
                    this.RaisePropertyChanged("Met");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MetName {
            get {
                return this.MetNameField;
            }
            set {
                if ((object.ReferenceEquals(this.MetNameField, value) != true)) {
                    this.MetNameField = value;
                    this.RaisePropertyChanged("MetName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Nome {
            get {
                return this.NomeField;
            }
            set {
                if ((object.ReferenceEquals(this.NomeField, value) != true)) {
                    this.NomeField = value;
                    this.RaisePropertyChanged("Nome");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Plate", Namespace="http://schemas.datacontract.org/2004/07/WebserviceAppNutre")]
    [System.SerializableAttribute()]
    public partial class Plate : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CaloriasUnitField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaloriesValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuantityDosageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuantityExtraDosageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuantityValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string RestaurantNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CaloriasUnit {
            get {
                return this.CaloriasUnitField;
            }
            set {
                if ((object.ReferenceEquals(this.CaloriasUnitField, value) != true)) {
                    this.CaloriasUnitField = value;
                    this.RaisePropertyChanged("CaloriasUnit");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaloriesValue {
            get {
                return this.CaloriesValueField;
            }
            set {
                if ((this.CaloriesValueField.Equals(value) != true)) {
                    this.CaloriesValueField = value;
                    this.RaisePropertyChanged("CaloriesValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuantityDosage {
            get {
                return this.QuantityDosageField;
            }
            set {
                if ((object.ReferenceEquals(this.QuantityDosageField, value) != true)) {
                    this.QuantityDosageField = value;
                    this.RaisePropertyChanged("QuantityDosage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuantityExtraDosage {
            get {
                return this.QuantityExtraDosageField;
            }
            set {
                if ((object.ReferenceEquals(this.QuantityExtraDosageField, value) != true)) {
                    this.QuantityExtraDosageField = value;
                    this.RaisePropertyChanged("QuantityExtraDosage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuantityValue {
            get {
                return this.QuantityValueField;
            }
            set {
                if ((object.ReferenceEquals(this.QuantityValueField, value) != true)) {
                    this.QuantityValueField = value;
                    this.RaisePropertyChanged("QuantityValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string RestaurantName {
            get {
                return this.RestaurantNameField;
            }
            set {
                if ((object.ReferenceEquals(this.RestaurantNameField, value) != true)) {
                    this.RestaurantNameField = value;
                    this.RaisePropertyChanged("RestaurantName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Vegetable", Namespace="http://schemas.datacontract.org/2004/07/WebserviceAppNutre")]
    [System.SerializableAttribute()]
    public partial class Vegetable : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CaloriesValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] ExtraInfoField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string QuantityValueField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnityCalField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UnityQuantityField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CaloriesValue {
            get {
                return this.CaloriesValueField;
            }
            set {
                if ((this.CaloriesValueField.Equals(value) != true)) {
                    this.CaloriesValueField = value;
                    this.RaisePropertyChanged("CaloriesValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] ExtraInfo {
            get {
                return this.ExtraInfoField;
            }
            set {
                if ((object.ReferenceEquals(this.ExtraInfoField, value) != true)) {
                    this.ExtraInfoField = value;
                    this.RaisePropertyChanged("ExtraInfo");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string QuantityValue {
            get {
                return this.QuantityValueField;
            }
            set {
                if ((object.ReferenceEquals(this.QuantityValueField, value) != true)) {
                    this.QuantityValueField = value;
                    this.RaisePropertyChanged("QuantityValue");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnityCal {
            get {
                return this.UnityCalField;
            }
            set {
                if ((object.ReferenceEquals(this.UnityCalField, value) != true)) {
                    this.UnityCalField = value;
                    this.RaisePropertyChanged("UnityCal");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UnityQuantity {
            get {
                return this.UnityQuantityField;
            }
            set {
                if ((object.ReferenceEquals(this.UnityQuantityField, value) != true)) {
                    this.UnityQuantityField = value;
                    this.RaisePropertyChanged("UnityQuantity");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceAppNutre.IServiceAppNutre")]
    public interface IServiceAppNutre {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/SignUp", ReplyAction="http://tempuri.org/IServiceAppNutre/SignUpResponse")]
        void SignUp(AdinistrationApp_eNutre.ServiceAppNutre.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/SignUp", ReplyAction="http://tempuri.org/IServiceAppNutre/SignUpResponse")]
        System.Threading.Tasks.Task SignUpAsync(AdinistrationApp_eNutre.ServiceAppNutre.User user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/LogIn", ReplyAction="http://tempuri.org/IServiceAppNutre/LogInResponse")]
        string LogIn(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/LogIn", ReplyAction="http://tempuri.org/IServiceAppNutre/LogInResponse")]
        System.Threading.Tasks.Task<string> LogInAsync(string username, string password);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/LogOut", ReplyAction="http://tempuri.org/IServiceAppNutre/LogOutResponse")]
        void LogOut(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/LogOut", ReplyAction="http://tempuri.org/IServiceAppNutre/LogOutResponse")]
        System.Threading.Tasks.Task LogOutAsync(string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/addActivity", ReplyAction="http://tempuri.org/IServiceAppNutre/addActivityResponse")]
        void addActivity(AdinistrationApp_eNutre.ServiceAppNutre.Activity activity, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/addActivity", ReplyAction="http://tempuri.org/IServiceAppNutre/addActivityResponse")]
        System.Threading.Tasks.Task addActivityAsync(AdinistrationApp_eNutre.ServiceAppNutre.Activity activity, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/addActivityXML", ReplyAction="http://tempuri.org/IServiceAppNutre/addActivityXMLResponse")]
        void addActivityXML(string _activitiesXml, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/addActivityXML", ReplyAction="http://tempuri.org/IServiceAppNutre/addActivityXMLResponse")]
        System.Threading.Tasks.Task addActivityXMLAsync(string _activitiesXml, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/addRestaurant", ReplyAction="http://tempuri.org/IServiceAppNutre/addRestaurantResponse")]
        void addRestaurant(AdinistrationApp_eNutre.ServiceAppNutre.Plate plate, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/addRestaurant", ReplyAction="http://tempuri.org/IServiceAppNutre/addRestaurantResponse")]
        System.Threading.Tasks.Task addRestaurantAsync(AdinistrationApp_eNutre.ServiceAppNutre.Plate plate, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/addRestaurantXML", ReplyAction="http://tempuri.org/IServiceAppNutre/addRestaurantXMLResponse")]
        void addRestaurantXML(string _platesXml, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/addRestaurantXML", ReplyAction="http://tempuri.org/IServiceAppNutre/addRestaurantXMLResponse")]
        System.Threading.Tasks.Task addRestaurantXMLAsync(string _platesXml, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/addVegetable", ReplyAction="http://tempuri.org/IServiceAppNutre/addVegetableResponse")]
        void addVegetable(AdinistrationApp_eNutre.ServiceAppNutre.Vegetable vegetable, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/addVegetable", ReplyAction="http://tempuri.org/IServiceAppNutre/addVegetableResponse")]
        System.Threading.Tasks.Task addVegetableAsync(AdinistrationApp_eNutre.ServiceAppNutre.Vegetable vegetable, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/addVegetableXML", ReplyAction="http://tempuri.org/IServiceAppNutre/addVegetableXMLResponse")]
        void addVegetableXML(string _vegetablesXml, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/addVegetableXML", ReplyAction="http://tempuri.org/IServiceAppNutre/addVegetableXMLResponse")]
        System.Threading.Tasks.Task addVegetableXMLAsync(string _vegetablesXml, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/getActivitiesList", ReplyAction="http://tempuri.org/IServiceAppNutre/getActivitiesListResponse")]
        AdinistrationApp_eNutre.ServiceAppNutre.Activity[] getActivitiesList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/getActivitiesList", ReplyAction="http://tempuri.org/IServiceAppNutre/getActivitiesListResponse")]
        System.Threading.Tasks.Task<AdinistrationApp_eNutre.ServiceAppNutre.Activity[]> getActivitiesListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/GetRestaurantsList", ReplyAction="http://tempuri.org/IServiceAppNutre/GetRestaurantsListResponse")]
        AdinistrationApp_eNutre.ServiceAppNutre.Plate[] GetRestaurantsList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/GetRestaurantsList", ReplyAction="http://tempuri.org/IServiceAppNutre/GetRestaurantsListResponse")]
        System.Threading.Tasks.Task<AdinistrationApp_eNutre.ServiceAppNutre.Plate[]> GetRestaurantsListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/getVegetablesList", ReplyAction="http://tempuri.org/IServiceAppNutre/getVegetablesListResponse")]
        AdinistrationApp_eNutre.ServiceAppNutre.Vegetable[] getVegetablesList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/getVegetablesList", ReplyAction="http://tempuri.org/IServiceAppNutre/getVegetablesListResponse")]
        System.Threading.Tasks.Task<AdinistrationApp_eNutre.ServiceAppNutre.Vegetable[]> getVegetablesListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/removeActivity", ReplyAction="http://tempuri.org/IServiceAppNutre/removeActivityResponse")]
        bool removeActivity(int id, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/removeActivity", ReplyAction="http://tempuri.org/IServiceAppNutre/removeActivityResponse")]
        System.Threading.Tasks.Task<bool> removeActivityAsync(int id, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/removePlate", ReplyAction="http://tempuri.org/IServiceAppNutre/removePlateResponse")]
        bool removePlate(int id, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/removePlate", ReplyAction="http://tempuri.org/IServiceAppNutre/removePlateResponse")]
        System.Threading.Tasks.Task<bool> removePlateAsync(int id, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/removeVegetable", ReplyAction="http://tempuri.org/IServiceAppNutre/removeVegetableResponse")]
        bool removeVegetable(int id, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/removeVegetable", ReplyAction="http://tempuri.org/IServiceAppNutre/removeVegetableResponse")]
        System.Threading.Tasks.Task<bool> removeVegetableAsync(int id, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/getCaloriesByActivity", ReplyAction="http://tempuri.org/IServiceAppNutre/getCaloriesByActivityResponse")]
        string[] getCaloriesByActivity(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/getCaloriesByActivity", ReplyAction="http://tempuri.org/IServiceAppNutre/getCaloriesByActivityResponse")]
        System.Threading.Tasks.Task<string[]> getCaloriesByActivityAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/getCaloriesByVeggie", ReplyAction="http://tempuri.org/IServiceAppNutre/getCaloriesByVeggieResponse")]
        string[] getCaloriesByVeggie(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/getCaloriesByVeggie", ReplyAction="http://tempuri.org/IServiceAppNutre/getCaloriesByVeggieResponse")]
        System.Threading.Tasks.Task<string[]> getCaloriesByVeggieAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/getCaloriesByPlate", ReplyAction="http://tempuri.org/IServiceAppNutre/getCaloriesByPlateResponse")]
        string[] getCaloriesByPlate(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/getCaloriesByPlate", ReplyAction="http://tempuri.org/IServiceAppNutre/getCaloriesByPlateResponse")]
        System.Threading.Tasks.Task<string[]> getCaloriesByPlateAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/getActivitiesListByCalories", ReplyAction="http://tempuri.org/IServiceAppNutre/getActivitiesListByCaloriesResponse")]
        AdinistrationApp_eNutre.ServiceAppNutre.Activity[] getActivitiesListByCalories(int calories, string unity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/getActivitiesListByCalories", ReplyAction="http://tempuri.org/IServiceAppNutre/getActivitiesListByCaloriesResponse")]
        System.Threading.Tasks.Task<AdinistrationApp_eNutre.ServiceAppNutre.Activity[]> getActivitiesListByCaloriesAsync(int calories, string unity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/getVegetablesListBycalories", ReplyAction="http://tempuri.org/IServiceAppNutre/getVegetablesListBycaloriesResponse")]
        AdinistrationApp_eNutre.ServiceAppNutre.Vegetable[] getVegetablesListBycalories(int calories, string unity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/getVegetablesListBycalories", ReplyAction="http://tempuri.org/IServiceAppNutre/getVegetablesListBycaloriesResponse")]
        System.Threading.Tasks.Task<AdinistrationApp_eNutre.ServiceAppNutre.Vegetable[]> getVegetablesListBycaloriesAsync(int calories, string unity);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/GetActivityById", ReplyAction="http://tempuri.org/IServiceAppNutre/GetActivityByIdResponse")]
        AdinistrationApp_eNutre.ServiceAppNutre.Activity GetActivityById(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/GetActivityById", ReplyAction="http://tempuri.org/IServiceAppNutre/GetActivityByIdResponse")]
        System.Threading.Tasks.Task<AdinistrationApp_eNutre.ServiceAppNutre.Activity> GetActivityByIdAsync(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/GetPlateById", ReplyAction="http://tempuri.org/IServiceAppNutre/GetPlateByIdResponse")]
        AdinistrationApp_eNutre.ServiceAppNutre.Plate GetPlateById(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/GetPlateById", ReplyAction="http://tempuri.org/IServiceAppNutre/GetPlateByIdResponse")]
        System.Threading.Tasks.Task<AdinistrationApp_eNutre.ServiceAppNutre.Plate> GetPlateByIdAsync(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/GetVegetableById", ReplyAction="http://tempuri.org/IServiceAppNutre/GetVegetableByIdResponse")]
        AdinistrationApp_eNutre.ServiceAppNutre.Vegetable GetVegetableById(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/GetVegetableById", ReplyAction="http://tempuri.org/IServiceAppNutre/GetVegetableByIdResponse")]
        System.Threading.Tasks.Task<AdinistrationApp_eNutre.ServiceAppNutre.Vegetable> GetVegetableByIdAsync(int _id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/UpdateActivity", ReplyAction="http://tempuri.org/IServiceAppNutre/UpdateActivityResponse")]
        bool UpdateActivity(AdinistrationApp_eNutre.ServiceAppNutre.Activity activity, int _id, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/UpdateActivity", ReplyAction="http://tempuri.org/IServiceAppNutre/UpdateActivityResponse")]
        System.Threading.Tasks.Task<bool> UpdateActivityAsync(AdinistrationApp_eNutre.ServiceAppNutre.Activity activity, int _id, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/UpdatePlate", ReplyAction="http://tempuri.org/IServiceAppNutre/UpdatePlateResponse")]
        bool UpdatePlate(AdinistrationApp_eNutre.ServiceAppNutre.Plate plate, int _id, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/UpdatePlate", ReplyAction="http://tempuri.org/IServiceAppNutre/UpdatePlateResponse")]
        System.Threading.Tasks.Task<bool> UpdatePlateAsync(AdinistrationApp_eNutre.ServiceAppNutre.Plate plate, int _id, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/UpdateVegetable", ReplyAction="http://tempuri.org/IServiceAppNutre/UpdateVegetableResponse")]
        bool UpdateVegetable(AdinistrationApp_eNutre.ServiceAppNutre.Vegetable vegetable, int _id, string token);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IServiceAppNutre/UpdateVegetable", ReplyAction="http://tempuri.org/IServiceAppNutre/UpdateVegetableResponse")]
        System.Threading.Tasks.Task<bool> UpdateVegetableAsync(AdinistrationApp_eNutre.ServiceAppNutre.Vegetable vegetable, int _id, string token);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceAppNutreChannel : AdinistrationApp_eNutre.ServiceAppNutre.IServiceAppNutre, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceAppNutreClient : System.ServiceModel.ClientBase<AdinistrationApp_eNutre.ServiceAppNutre.IServiceAppNutre>, AdinistrationApp_eNutre.ServiceAppNutre.IServiceAppNutre {
        
        public ServiceAppNutreClient() {
        }
        
        public ServiceAppNutreClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceAppNutreClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceAppNutreClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceAppNutreClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SignUp(AdinistrationApp_eNutre.ServiceAppNutre.User user) {
            base.Channel.SignUp(user);
        }
        
        public System.Threading.Tasks.Task SignUpAsync(AdinistrationApp_eNutre.ServiceAppNutre.User user) {
            return base.Channel.SignUpAsync(user);
        }
        
        public string LogIn(string username, string password) {
            return base.Channel.LogIn(username, password);
        }
        
        public System.Threading.Tasks.Task<string> LogInAsync(string username, string password) {
            return base.Channel.LogInAsync(username, password);
        }
        
        public void LogOut(string token) {
            base.Channel.LogOut(token);
        }
        
        public System.Threading.Tasks.Task LogOutAsync(string token) {
            return base.Channel.LogOutAsync(token);
        }
        
        public void addActivity(AdinistrationApp_eNutre.ServiceAppNutre.Activity activity, string token) {
            base.Channel.addActivity(activity, token);
        }
        
        public System.Threading.Tasks.Task addActivityAsync(AdinistrationApp_eNutre.ServiceAppNutre.Activity activity, string token) {
            return base.Channel.addActivityAsync(activity, token);
        }
        
        public void addActivityXML(string _activitiesXml, string token) {
            base.Channel.addActivityXML(_activitiesXml, token);
        }
        
        public System.Threading.Tasks.Task addActivityXMLAsync(string _activitiesXml, string token) {
            return base.Channel.addActivityXMLAsync(_activitiesXml, token);
        }
        
        public void addRestaurant(AdinistrationApp_eNutre.ServiceAppNutre.Plate plate, string token) {
            base.Channel.addRestaurant(plate, token);
        }
        
        public System.Threading.Tasks.Task addRestaurantAsync(AdinistrationApp_eNutre.ServiceAppNutre.Plate plate, string token) {
            return base.Channel.addRestaurantAsync(plate, token);
        }
        
        public void addRestaurantXML(string _platesXml, string token) {
            base.Channel.addRestaurantXML(_platesXml, token);
        }
        
        public System.Threading.Tasks.Task addRestaurantXMLAsync(string _platesXml, string token) {
            return base.Channel.addRestaurantXMLAsync(_platesXml, token);
        }
        
        public void addVegetable(AdinistrationApp_eNutre.ServiceAppNutre.Vegetable vegetable, string token) {
            base.Channel.addVegetable(vegetable, token);
        }
        
        public System.Threading.Tasks.Task addVegetableAsync(AdinistrationApp_eNutre.ServiceAppNutre.Vegetable vegetable, string token) {
            return base.Channel.addVegetableAsync(vegetable, token);
        }
        
        public void addVegetableXML(string _vegetablesXml, string token) {
            base.Channel.addVegetableXML(_vegetablesXml, token);
        }
        
        public System.Threading.Tasks.Task addVegetableXMLAsync(string _vegetablesXml, string token) {
            return base.Channel.addVegetableXMLAsync(_vegetablesXml, token);
        }
        
        public AdinistrationApp_eNutre.ServiceAppNutre.Activity[] getActivitiesList() {
            return base.Channel.getActivitiesList();
        }
        
        public System.Threading.Tasks.Task<AdinistrationApp_eNutre.ServiceAppNutre.Activity[]> getActivitiesListAsync() {
            return base.Channel.getActivitiesListAsync();
        }
        
        public AdinistrationApp_eNutre.ServiceAppNutre.Plate[] GetRestaurantsList() {
            return base.Channel.GetRestaurantsList();
        }
        
        public System.Threading.Tasks.Task<AdinistrationApp_eNutre.ServiceAppNutre.Plate[]> GetRestaurantsListAsync() {
            return base.Channel.GetRestaurantsListAsync();
        }
        
        public AdinistrationApp_eNutre.ServiceAppNutre.Vegetable[] getVegetablesList() {
            return base.Channel.getVegetablesList();
        }
        
        public System.Threading.Tasks.Task<AdinistrationApp_eNutre.ServiceAppNutre.Vegetable[]> getVegetablesListAsync() {
            return base.Channel.getVegetablesListAsync();
        }
        
        public bool removeActivity(int id, string token) {
            return base.Channel.removeActivity(id, token);
        }
        
        public System.Threading.Tasks.Task<bool> removeActivityAsync(int id, string token) {
            return base.Channel.removeActivityAsync(id, token);
        }
        
        public bool removePlate(int id, string token) {
            return base.Channel.removePlate(id, token);
        }
        
        public System.Threading.Tasks.Task<bool> removePlateAsync(int id, string token) {
            return base.Channel.removePlateAsync(id, token);
        }
        
        public bool removeVegetable(int id, string token) {
            return base.Channel.removeVegetable(id, token);
        }
        
        public System.Threading.Tasks.Task<bool> removeVegetableAsync(int id, string token) {
            return base.Channel.removeVegetableAsync(id, token);
        }
        
        public string[] getCaloriesByActivity(int id) {
            return base.Channel.getCaloriesByActivity(id);
        }
        
        public System.Threading.Tasks.Task<string[]> getCaloriesByActivityAsync(int id) {
            return base.Channel.getCaloriesByActivityAsync(id);
        }
        
        public string[] getCaloriesByVeggie(int id) {
            return base.Channel.getCaloriesByVeggie(id);
        }
        
        public System.Threading.Tasks.Task<string[]> getCaloriesByVeggieAsync(int id) {
            return base.Channel.getCaloriesByVeggieAsync(id);
        }
        
        public string[] getCaloriesByPlate(int id) {
            return base.Channel.getCaloriesByPlate(id);
        }
        
        public System.Threading.Tasks.Task<string[]> getCaloriesByPlateAsync(int id) {
            return base.Channel.getCaloriesByPlateAsync(id);
        }
        
        public AdinistrationApp_eNutre.ServiceAppNutre.Activity[] getActivitiesListByCalories(int calories, string unity) {
            return base.Channel.getActivitiesListByCalories(calories, unity);
        }
        
        public System.Threading.Tasks.Task<AdinistrationApp_eNutre.ServiceAppNutre.Activity[]> getActivitiesListByCaloriesAsync(int calories, string unity) {
            return base.Channel.getActivitiesListByCaloriesAsync(calories, unity);
        }
        
        public AdinistrationApp_eNutre.ServiceAppNutre.Vegetable[] getVegetablesListBycalories(int calories, string unity) {
            return base.Channel.getVegetablesListBycalories(calories, unity);
        }
        
        public System.Threading.Tasks.Task<AdinistrationApp_eNutre.ServiceAppNutre.Vegetable[]> getVegetablesListBycaloriesAsync(int calories, string unity) {
            return base.Channel.getVegetablesListBycaloriesAsync(calories, unity);
        }
        
        public AdinistrationApp_eNutre.ServiceAppNutre.Activity GetActivityById(int _id) {
            return base.Channel.GetActivityById(_id);
        }
        
        public System.Threading.Tasks.Task<AdinistrationApp_eNutre.ServiceAppNutre.Activity> GetActivityByIdAsync(int _id) {
            return base.Channel.GetActivityByIdAsync(_id);
        }
        
        public AdinistrationApp_eNutre.ServiceAppNutre.Plate GetPlateById(int _id) {
            return base.Channel.GetPlateById(_id);
        }
        
        public System.Threading.Tasks.Task<AdinistrationApp_eNutre.ServiceAppNutre.Plate> GetPlateByIdAsync(int _id) {
            return base.Channel.GetPlateByIdAsync(_id);
        }
        
        public AdinistrationApp_eNutre.ServiceAppNutre.Vegetable GetVegetableById(int _id) {
            return base.Channel.GetVegetableById(_id);
        }
        
        public System.Threading.Tasks.Task<AdinistrationApp_eNutre.ServiceAppNutre.Vegetable> GetVegetableByIdAsync(int _id) {
            return base.Channel.GetVegetableByIdAsync(_id);
        }
        
        public bool UpdateActivity(AdinistrationApp_eNutre.ServiceAppNutre.Activity activity, int _id, string token) {
            return base.Channel.UpdateActivity(activity, _id, token);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateActivityAsync(AdinistrationApp_eNutre.ServiceAppNutre.Activity activity, int _id, string token) {
            return base.Channel.UpdateActivityAsync(activity, _id, token);
        }
        
        public bool UpdatePlate(AdinistrationApp_eNutre.ServiceAppNutre.Plate plate, int _id, string token) {
            return base.Channel.UpdatePlate(plate, _id, token);
        }
        
        public System.Threading.Tasks.Task<bool> UpdatePlateAsync(AdinistrationApp_eNutre.ServiceAppNutre.Plate plate, int _id, string token) {
            return base.Channel.UpdatePlateAsync(plate, _id, token);
        }
        
        public bool UpdateVegetable(AdinistrationApp_eNutre.ServiceAppNutre.Vegetable vegetable, int _id, string token) {
            return base.Channel.UpdateVegetable(vegetable, _id, token);
        }
        
        public System.Threading.Tasks.Task<bool> UpdateVegetableAsync(AdinistrationApp_eNutre.ServiceAppNutre.Vegetable vegetable, int _id, string token) {
            return base.Channel.UpdateVegetableAsync(vegetable, _id, token);
        }
    }
}
